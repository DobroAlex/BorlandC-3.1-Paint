#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
#include <conio.h>
#include <graphics.h>
#include "C:\OS\MD.H"
//struct   REGPACK regs;
typedef enum { false, true} bool;
const X1 = 0,Y1=0, X2 = 640 , Y2 = 480;
void drawHead(void);
void drawLeftButton (bool state);
void drawRightButton (bool state);
void drawMiddleButton (bool state);
void drawLeftRightButtons (bool state);
void drawBar (int left, int top, int right, int bottom, int collor);
void drawEllipse (int x, int y, int xrad, int yrad, int color);
int main (){
   clrscr ( );
   initMouse();
   if (regs.r_ax == 0){
      printf (" Mouse not found!\n Press any key to continue ...");
      getch ();
      return -1;
   }
   else {
      printf ("\n Mouse found and have %d buttons ", regs.r_bx);
      getch ();
   }
      /* request auto detection */
int gdriver = DETECT, gmode, errorcode;

/* initialize graphics mode */
initgraph(&gdriver, &gmode, "C:\OS");

/* read result of initialization */
errorcode = graphresult();

if (errorcode != grOk)  /* an error occurred */
{
   printf("Graphics error: %s\n", grapherrormsg(errorcode));
   printf("Press any key to halt:");
   getch();
   exit(1);             /* return with error code */
}
   drawHead();
   int mX, mY, mB, oldmX, oldmY, color= GREEN;
   bool butt1 = false;
   bool butt2 = false;
   bool butt3 = false;
   bool butt4 = false;/*left, right, mid, left+right*/
   bool firstPress=true;
   intrm (1);
   setMouseBound(BOUND_VERTICAL,0, Y2-35);
   setMousePos(300, 300);
   while (1){
      if (kbhit()){
	 break;
      }
      if (firstPress==true){
	setMousePos(300,300);
	oldmX=300;
	oldmY=300;
	mX=300;
	mY=300;
	firstPress=false;
      }
      oldmX=mX;
      oldmY = mY;
      getMouseState(mX, mY, mB);
      gotoxy (1, 1);
      printf ("X=%3d,Y=%3d",mX, mY);
      if (regs.r_bx==0){
	setMouseCursor(CURSOR_POINTER);
        showMouse();
      }
      if (mB == 1){
	 if (!butt1){
	    butt1= true;
	    setMouseCursor(CURSOR_PENCIL);
	    drawLeftButton(true);
	 }
      setcolor (color);
       hideMouse();
      line (oldmX, oldmY, mX, mY);
      showMouse();
     //putpixel (mX, mY, getcolor());
      }   //end mb=1
      else {
	if (butt1){
	   drawLeftButton(false);
	   butt1=false;
	}
      }
      if (mB == 2){
	 if(!butt2){
	    butt2=true;
	    drawRightButton(true);
	    setMouseCursor(CURSOR_ERASER);
	 }
	 if (mY < (Y2-35)){
	    drawRightButton(true);
	    hideMouse();
	    drawEllipse(mX,mY,5, 5,BLACK);
	    showMouse();
	 }
      }
      else {
	 if (butt2){
	    drawRightButton (false);
	    //showMouse();
	 }
      }
      if(mB == 4){
	  if (!butt4){
	     butt4=true;
	     drawEllipse (625, 470, 4, 4, color+1);
	  }
	  color++;
	  if(color>getmaxcolor()){
		color=0;
	  }
	  showMouse();

      }
      else {
	 if (butt4){
	    drawEllipse(625,470,4,4,WHITE);
	    butt4=false;
	 }
      }
      if (mB==3){
	// drawBar(X1,Y1,X2,450,BLACK);
	 if (!butt3){
	    butt3=true;
	    drawLeftRightButtons (true);
	 }
	 hideMouse();
	 drawBar (X1,Y1, X2, 450, BLACK);
	 showMouse();
      }
      else {
	 if( butt3){
	    drawLeftRightButtons (false);
	    butt3=false;
	  }
      }


   }//end while
   getch();
   return 0;

}
void drawHead(void){
   int curColor=getcolor();
   drawBar(X1,Y2-30,X2, Y2,DARKGRAY );
   drawBar (X2-30, Y2-30, X2, Y2, WHITE);   /*draw mouse icon*/
   drawBar (X2-20, Y2-5, X2-15, Y2, RED);    /*dhows that mouse is connected*/

   setcolor (curColor);
}
void drawBar( int left, int top, int right, int bottom, int color){
   setfillstyle(SOLID_FILL, color);
   setcolor (color);
   bar (left, top, right, bottom);
}
void drawEllipse (int x, int y, int xrad, int yrad, int color){
   int curColor = getcolor();
   setfillstyle (SOLID_FILL, color);
   setcolor(color);
   fillellipse (x, y, xrad,yrad);
}
void drawLeftButton (bool state){
	if (state==true){
		drawBar (X2-30, Y2-30, X2-15, Y2-15, LIGHTGREEN);
	}
	else if (state==false) {
		drawBar(X2-30,Y2-30,X2-15, Y2-15, WHITE);
	}
}
void drawRightButton (bool state){
	if (state==true){
		drawBar(X2-15,Y2-30, X2, Y2-15, LIGHTGREEN);
	}
	else if (state==false) {
		drawBar(X2-15, Y2-30 , X2, Y2-15, WHITE);
	}
}
void drawLeftRightButtons(bool state){
	if (state==true){
		drawBar(X2-30, Y2-30, X2 , Y2-15, LIGHTGREEN);
	}
	else if (state==false){
		drawBar(X2-30,Y2-30,X2,Y2-15, WHITE);
	}
}
